//Main
package TankCreator;

import java.lang.Math;
import java.util.Scanner;

public class Main {
	
	public static void main(String[] args) 
	{
		//this will verify if at any point a tank died
		boolean death = false;
		//scanner so user can type in input
		Scanner in = new Scanner(System.in);
 
		System.out.println("Type in the tank name of Alpha 1");
        String name = in.nextLine();
        System.out.println("Type in the health of Alpha 1");
        double health = in.nextDouble();
        System.out.println("Type in the damage of Alpha 1");
        float damage = in.nextFloat();
        //player tank
		tankCreator aOne = new tankCreator(name, health, damage);
		//enemy tank
		tankCreator bOne = new tankCreator("Panzer 4", 100, 50);
		//story telling :P
        System.out.println(aOne.getName()+" is on the move! You see a " + bOne.getName() + ". Your crew is desperately screaming to engage it."
        		+ " It doesn't seem to notice you, do you want to get closer to shoot or engage right now? 1 = Move Closer, 0 = Engage");
        int decision = in.nextInt();
        //if player proceeds to advance
        if(decision==1)
        {
	        // define the range of random number generator
	        int maxDecision = 10;
	        int minDecision = 1;
	        //1-10
	        int rangeDecision = maxDecision - minDecision + 1;
	        //randomly generate number
	        int decisionLuck = (int)(Math.random() * rangeDecision) + minDecision;
	        //randomly decide if decision worked
	        //3/10 chances of you getting killed instantly
	        if(decisionLuck > 7)
	        {
	        	System.out.println("It was a trap! They turned their turret faster than we could engage");
	        	death = true;
	        }
	        //7/10 chances of getting unnoticed
	        else
	        {
	        	System.out.println("They didn't notice us! We got closer and now the our gun should work way better!");
	        	//here the damage modifier goes from 1-10
	        	aOne.setDamageClose(damage);
	        }
        }
        //if player just engages
        else
        {
        	System.out.println("Better not risk it. Unfortunately our cannon won't work as well as in closer ranges!");
        	//here the damage modifier goes from 1-6
        	aOne.setDamageFar(damage);
        }
        //if no one is dead
        if(!death)
        {
        	//set health of enemy - damage generated beforehand
	        bOne.setHealth(bOne.getHealth() - aOne.getDamage());
	        if(damage > 75)
	        {
	    	System.out.println(aOne.getName() + " shoots at " + bOne.getName() + " and gets a critical hit, doing " + aOne.getDamage()
			+ " damage, leaving " + bOne.getName() + " at " + bOne.getHealth() + " Health.");
	        }
	        else if(damage < 75 && damage > 25)
	        {
	        	 System.out.println(aOne.getName() + " shoots at " + bOne.getName() + " and hits, doing " + aOne.getDamage() + " damage, leaving "
	             		+ bOne.getName() + " at " + bOne.getHealth() + " Health.");
	        }
	        else
	        {
	            System.out.println(aOne.getName() + " shoots at " + bOne.getName() + " and barely hits, doing " + aOne.getDamage() + 
	            		" damage, leaving " + bOne.getName() + " at " + bOne.getHealth() + " Health.");
	        }
	        //if initial strike is deadly
	        if(bOne.getHealth() <= 0)
	        {
	        	System.out.println("Good job commander! You destroyed your enemy!");
	        	death = true;
	        }
	        else
	        {
	        	System.out.println("It survived! Reload the cannon!");
	        }
	        //while no one is dead, continue
	        //it alternates through turns, so 0 is enemy turn
	        //1 is player turn
	        for(int i=0; i<1 && !death; i++)
	        {
	        	//enemy turn
	        	if(i== 0)
	        	{
	        		aOne.setHealth(aOne.getHealth()-bOne.getDamage());
	        		System.out.println(bOne.getName()+" did " + bOne.getDamage() + " damage and now " + aOne.getName() + " has " 
	        		+ aOne.getHealth() + " health");
	        		if(aOne.getHealth() <= 0)
	        		{
	        			death= true;
	                	System.out.println(aOne.getName()+" died, apologies");
	        		}
	        	}
	        	//player turn if they chose to advance
	        	if (i == 1 && decision == 1)
	        	{
	        		aOne.setDamageClose(damage);
	        		bOne.setHealth(bOne.getHealth() - aOne.getDamage());
	        		System.out.println("Gun reloaded! You fired doing " + aOne.getDamage() + " Damage, now the enemy has " + bOne.getHealth());
	        		i=-2;
	        		if(bOne.getHealth() <= 0)
	        		{
	        			death= true;
	        			System.out.println("Congratulations! You won!");
	        		}
	        	}
	        	//player turn if they chose to just engage
	        	if (i == 1 && decision == 0)
	        	{
	        		aOne.setDamageFar(damage);
	        		bOne.setHealth(bOne.getHealth() - aOne.getDamage());
	        		System.out.println("Gun reloaded! You fired doing " + aOne.getDamage() + " Damage, now the enemy has " + bOne.getHealth());
	        		i=-2;
	        		if(bOne.getHealth() <= 0)
	        		{
	        			death= true;
	        			System.out.println("Congratulations! You won!");
	        		}
	        	}
	        }
        }
        //died anyway
        else
        {
        	System.out.println(aOne.getName()+" died, apologies");
        }
	}

}
//Class with constructor
package TankCreator;

public class tankCreator {
	protected String name;
	protected double health;
	protected double damage;
	//constructor
	tankCreator(String newName, double newHealth, double newDamage)
	{
		name = newName;
		health =  newHealth;
		damage =  newDamage;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	public double getHealth() {
		return health;
	}

	public void setHealth(double health) {
		this.health = health;
	}

	public double getDamage() {
		return damage;
	}

	public void setDamage(double damage) {
		this.damage = damage;
	}
	//in case player chooses to advance and survives
	//this is the generator for the damage modifier
	public void setDamageClose(double damage)
	{
        int maxCombat = 10;
        int minCombat = 1;
        //1 to 10
        int rangeCombat = maxCombat - minCombat + 1;
        //generated damage
        int damageFactorCombat = (int)(Math.random() * rangeCombat) + minCombat;
        
        //damage / random number * 5 is a randomly generated number, it just works for most of the examples
        //feel free to change as you wish
		this.damage = damage/ damageFactorCombat * 5.00;
	}
	//in case player chooses to stay put
	//this is the generator for the damage modifier
	public void setDamageFar(double damage)
	{
        int maxCombat = 6;
        int minCombat = 1;
        //1 to 6
        int rangeCombat = maxCombat - minCombat + 1;
        //generated damage
        int damageFactorCombat = (int)(Math.random() * rangeCombat) + minCombat;
        
        //damage / random number * 5 is a randomly generated number, it just works for most of the examples
        //feel free to change as you wish
		this.damage = damage/ damageFactorCombat * 5.00;
	}
}

